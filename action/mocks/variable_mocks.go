// Code generated by MockGen. DO NOT EDIT.
// Source: variable.go

// Package mocks is a generated GoMock package.
package mocks

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockVariableClient is a mock of VariableClient interface
type MockVariableClient struct {
	ctrl     *gomock.Controller
	recorder *MockVariableClientMockRecorder
}

// MockVariableClientMockRecorder is the mock recorder for MockVariableClient
type MockVariableClientMockRecorder struct {
	mock *MockVariableClient
}

// NewMockVariableClient creates a new mock instance
func NewMockVariableClient(ctrl *gomock.Controller) *MockVariableClient {
	mock := &MockVariableClient{ctrl: ctrl}
	mock.recorder = &MockVariableClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockVariableClient) EXPECT() *MockVariableClientMockRecorder {
	return m.recorder
}

// RetrieveSecret mocks base method
func (m *MockVariableClient) RetrieveSecret(name string) ([]byte, error) {
	ret := m.ctrl.Call(m, "RetrieveSecret", name)
	ret0, _ := ret[0].([]byte)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// RetrieveSecret indicates an expected call of RetrieveSecret
func (mr *MockVariableClientMockRecorder) RetrieveSecret(name interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RetrieveSecret", reflect.TypeOf((*MockVariableClient)(nil).RetrieveSecret), name)
}

// AddSecret mocks base method
func (m *MockVariableClient) AddSecret(name, value string) error {
	ret := m.ctrl.Call(m, "AddSecret", name, value)
	ret0, _ := ret[0].(error)
	return ret0
}

// AddSecret indicates an expected call of AddSecret
func (mr *MockVariableClientMockRecorder) AddSecret(name, value interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AddSecret", reflect.TypeOf((*MockVariableClient)(nil).AddSecret), name, value)
}
